{"_id":"run-queue","_rev":"5-2f708eb62d11e2361a98ea23e8f64047","name":"run-queue","description":"A promise based, dynamic priority queue runner, with concurrency limiting.","dist-tags":{"latest":"1.0.3"},"versions":{"1.0.0":{"name":"run-queue","version":"1.0.0","description":"Process a dynamic queue of data, possibly concurrently","main":"queue.js","scripts":{"test":"standard && tap -J test"},"keywords":[],"author":{"name":"Rebecca Turner","email":"me@re-becca.org","url":"http://re-becca.org/"},"license":"ISC","devDependencies":{"standard":"^8.6.0","tap":"^10.2.0"},"files":["queue.js"],"directories":{"test":"test"},"dependencies":{"standard":"^8.6.0"},"repository":{"type":"git","url":"git+https://github.com/iarna/run-queue.git"},"bugs":{"url":"https://github.com/iarna/run-queue/issues"},"homepage":"https://npmjs.com/package/run-queue","gitHead":"f0e7a12f9720352ee386e2c2ce5be9c0bd4c3b7f","_id":"run-queue@1.0.0","_shasum":"5d4da75ba1589e9aec294d3fce987dd60f1def3d","_from":".","_npmVersion":"4.4.0","_nodeVersion":"4.6.1","_npmUser":{"name":"iarna","email":"me@re-becca.org"},"dist":{"shasum":"5d4da75ba1589e9aec294d3fce987dd60f1def3d","tarball":"https://registry.npmjs.org/run-queue/-/run-queue-1.0.0.tgz"},"maintainers":[{"name":"iarna","email":"me@re-becca.org"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/run-queue-1.0.0.tgz_1488149007258_0.8681126337032765"}},"1.0.1":{"name":"run-queue","version":"1.0.1","description":"Process a dynamic queue of data, possibly concurrently","main":"queue.js","scripts":{"test":"standard && tap -J test"},"keywords":[],"author":{"name":"Rebecca Turner","email":"me@re-becca.org","url":"http://re-becca.org/"},"license":"ISC","devDependencies":{"standard":"^8.6.0","tap":"^10.2.0"},"files":["queue.js"],"directories":{"test":"test"},"dependencies":{"standard":"^8.6.0"},"repository":{"type":"git","url":"git+https://github.com/iarna/run-queue.git"},"bugs":{"url":"https://github.com/iarna/run-queue/issues"},"homepage":"https://npmjs.com/package/run-queue","gitHead":"2fc7ffce3f7ed31ecd17ae16a792beab43b948ad","_id":"run-queue@1.0.1","_shasum":"f4b0ab80b75f416aea140b13f059af1224844710","_from":".","_npmVersion":"4.4.0","_nodeVersion":"4.6.1","_npmUser":{"name":"iarna","email":"me@re-becca.org"},"dist":{"shasum":"f4b0ab80b75f416aea140b13f059af1224844710","tarball":"https://registry.npmjs.org/run-queue/-/run-queue-1.0.1.tgz"},"maintainers":[{"name":"iarna","email":"me@re-becca.org"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/run-queue-1.0.1.tgz_1488154288448_0.6650912221521139"}},"1.0.2":{"name":"run-queue","version":"1.0.2","description":"A promise based, dynamic priority queue runner, with concurrency limiting.","main":"queue.js","scripts":{"test":"standard && tap -J test"},"keywords":[],"author":{"name":"Rebecca Turner","email":"me@re-becca.org","url":"http://re-becca.org/"},"license":"ISC","devDependencies":{"standard":"^8.6.0","tap":"^10.2.0"},"files":["queue.js"],"directories":{"test":"test"},"dependencies":{"standard":"^8.6.0"},"repository":{"type":"git","url":"git+https://github.com/iarna/run-queue.git"},"bugs":{"url":"https://github.com/iarna/run-queue/issues"},"homepage":"https://npmjs.com/package/run-queue","gitHead":"1fb0c4025eb91fb65b0492d626f9f876432b4a50","_id":"run-queue@1.0.2","_shasum":"a9396e5962a5b0b022a81c125017e95302a6f76a","_from":".","_npmVersion":"4.4.0","_nodeVersion":"4.6.1","_npmUser":{"name":"iarna","email":"me@re-becca.org"},"dist":{"shasum":"a9396e5962a5b0b022a81c125017e95302a6f76a","tarball":"https://registry.npmjs.org/run-queue/-/run-queue-1.0.2.tgz"},"maintainers":[{"name":"iarna","email":"me@re-becca.org"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/run-queue-1.0.2.tgz_1488154367416_0.6272554455790669"}},"1.0.3":{"name":"run-queue","version":"1.0.3","description":"A promise based, dynamic priority queue runner, with concurrency limiting.","main":"queue.js","scripts":{"test":"standard && tap -J test"},"keywords":[],"author":{"name":"Rebecca Turner","email":"me@re-becca.org","url":"http://re-becca.org/"},"license":"ISC","devDependencies":{"standard":"^8.6.0","tap":"^10.2.0"},"files":["queue.js"],"directories":{"test":"test"},"dependencies":{"aproba":"^1.1.1"},"repository":{"type":"git","url":"git+https://github.com/iarna/run-queue.git"},"bugs":{"url":"https://github.com/iarna/run-queue/issues"},"homepage":"https://npmjs.com/package/run-queue","gitHead":"3c315b738d0578c2c54be2beb0469d00ccf1dc25","_id":"run-queue@1.0.3","_shasum":"e848396f057d223f24386924618e25694161ec47","_from":".","_npmVersion":"2.15.0","_nodeVersion":"0.12.13","_npmUser":{"name":"iarna","email":"me@re-becca.org"},"dist":{"shasum":"e848396f057d223f24386924618e25694161ec47","tarball":"https://registry.npmjs.org/run-queue/-/run-queue-1.0.3.tgz"},"maintainers":[{"name":"iarna","email":"me@re-becca.org"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/run-queue-1.0.3.tgz_1488161288446_0.14580746600404382"}}},"readme":"# run-queue\n\nA promise based, dynamic priority queue runner, with concurrency limiting.\n\n```js\nconst RunQueue = require('run-queue')\n\nconst queue = new RunQueue({\n  maxConcurrency: 1\n})\n\nqueue.add(1, example, [-1])\nfor (let ii = 0; ii < 5; ++ii) {\n  queue.add(0, example, [ii])\n}\nconst finished = []\nqueue.run().then(\n  console.log(finished)\n})\n\nfunction example (num, next) {\n  setTimeout(() => {\n    finished.push(num)\n    next()\n  }, 5 - Math.abs(num))\n}\n```\n\nwould output\n\n```\n[ 0, 1, 2, 3, 4, -1 ]\n```\n\nIf you bump concurrency to `2`, then you get:\n\n```\n[ 1, 0, 3, 2, 4, -1 ]\n```\n\nThe concurrency means that they don't finish in order, because some take\nlonger than others.  Each priority level must finish entirely before the\nnext priority level is run.  See\n[PRIORITIES](https://github.com/iarna/run-queue#priorities) below.  This is\neven true if concurrency is set high enough that all of the regular queue\ncan execute at once, for instance, with `maxConcurrency: 10`:\n\n```\n[ 4, 3, 2, 1, 0, -1 ]\n```\n\n## API\n\n### const queue = new RunQueue(options)\n\nCreate a new queue. Options may contain:\n\n* maxConcurrency - (Default: `1`) The maximum number of jobs to execute at once.\n* Promise - (Default: global.Promise) The promise implementation to use.\n\n### queue.add (prio, fn, args)\n\nAdd a new job to the end of the queue at priority `prio` that will run `fn`\nwith `args`. If `fn` is async then it should return a Promise.\n\n### queue.run ()\n\nStart running the job queue.  Returns a Promise that resolves when either\nall the jobs are complete or a job ends in error (throws or returns a\nrejected promise). If a job ended in error then this Promise will be rejected\nwith that error and no further queue running will be done.\n\n## PRIORITIES\n\nPriorities are any integer value >= 0.\n\nLowest is executed first.\n\nPriorities essentially represent distinct job queues.  All jobs in a queue\nmust complete before the next highest priority job queue is executed.\n\nThis means that if you have two queues, `0` and `1` then ALL jobs in `0`\nmust complete before ANY execute in `1`.  If you add new `0` level jobs\nwhile `1` level jobs are running then it will switch back processing the `0`\nqueue and won't execute any more `1` jobs till all of the new `0` jobs\ncomplete.\n","maintainers":[{"name":"iarna","email":"me@re-becca.org"}],"time":{"modified":"2017-03-11T02:30:01.951Z","created":"2017-02-26T22:43:27.507Z","1.0.0":"2017-02-26T22:43:27.507Z","1.0.1":"2017-02-27T00:11:28.664Z","1.0.2":"2017-02-27T00:12:47.664Z","1.0.3":"2017-02-27T02:08:10.231Z"},"homepage":"https://npmjs.com/package/run-queue","keywords":[],"repository":{"type":"git","url":"git+https://github.com/iarna/run-queue.git"},"author":{"name":"Rebecca Turner","email":"me@re-becca.org","url":"http://re-becca.org/"},"bugs":{"url":"https://github.com/iarna/run-queue/issues"},"license":"ISC","readmeFilename":"README.md","users":{"iarna":true},"_attachments":{},"_etag":"\"58c36129-1f93\"","_lastModified":"Sat, 11 Mar 2017 2:30:01 GMT"}